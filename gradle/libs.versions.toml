[versions]
agp = "8.7.0-beta01"
kotlin = '2.0.20'
compileSdk = '34'
minSdk = '28'
targetSdk = '34'
kotlin-inject = '0.7.1'
ksp = '2.0.20-1.0.24'
coroutines = "1.8.1"
napier = '2.7.1'
ktor = '3.0.0-beta-2'
buildkonfig = '0.15.2'
ktorfit = '2.1.0'
observableviewmodel = "1.0.0-BETA-5"
nativecoroutines = "1.0.0-ALPHA-35"
skie = "0.9.0-RC.3"
androidx-activity = '1.9.1'
androidx-lifecycle = '2.8.4'
androidx-navigation = "2.7.7"
compose-bom = "2024.08.00" # https://developer.android.com/jetpack/compose/bom/bom-mapping
compose-image-loader = "1.8.3"

[libraries]
kotlin-stdlib-common = { module = 'org.jetbrains.kotlin:kotlin-stdlib-common', version.ref = 'kotlin' }
coroutines-core = { module = 'org.jetbrains.kotlinx:kotlinx-coroutines-core', version.ref = 'coroutines' }
coroutines-android = { module = 'org.jetbrains.kotlinx:kotlinx-coroutines-android', version.ref = 'coroutines' }
napier-logger = { module = 'io.github.aakira:napier', version.ref = 'napier' }
kotlinInject-compiler = { module = 'me.tatarka.inject:kotlin-inject-compiler-ksp', version.ref = 'kotlin-inject' }
kotlinInject-runtime = { module = 'me.tatarka.inject:kotlin-inject-runtime', version.ref = 'kotlin-inject' }
configuration-annotations = { module = "co.touchlab.skie:configuration-annotations", version.ref = 'skie' }
# Android libraries
androidx-lifecycle-viewmodel-ktx = { module = 'androidx.lifecycle:lifecycle-viewmodel-ktx', version.ref = 'androidx-lifecycle' }
androidx-lifecycle-viewmodel-compose = { module = 'androidx.lifecycle:lifecycle-viewmodel-compose', version.ref = 'androidx-lifecycle' }
androidx-lifecycle-runtime-compose = { module = 'androidx.lifecycle:lifecycle-runtime-compose', version.ref = 'androidx-lifecycle' }
androidx-activity-compose = { module = 'androidx.activity:activity-compose', version.ref = 'androidx-activity' }
androidx-navigation-compose = { module = 'androidx.navigation:navigation-compose', version.ref = 'androidx-navigation' }
# Ktor Networking
ktor-client-core = { module = 'io.ktor:ktor-client-core', version.ref = 'ktor' }
ktor-client-android = { module = 'io.ktor:ktor-client-okhttp', version.ref = 'ktor' }
ktor-client-ios = { module = 'io.ktor:ktor-client-darwin', version.ref = 'ktor' }
ktor-client-logging = { module = 'io.ktor:ktor-client-logging', version.ref = 'ktor' }
ktorfit-lib = { module = 'de.jensklingenberg.ktorfit:ktorfit-lib', version.ref = 'ktorfit' }
ktorfit-response = { module = 'de.jensklingenberg.ktorfit:ktorfit-converters-response', version.ref = 'ktorfit' }
# Serialization
ktor-content-negotiation = { module = 'io.ktor:ktor-client-content-negotiation', version.ref = 'ktor' }
ktor-client-serialization = { module = 'io.ktor:ktor-client-serialization', version.ref = 'ktor' }
ktor-serialization-json = { module = 'io.ktor:ktor-serialization-kotlinx-json', version.ref = 'ktor' }
# KMM ViewModels
observable-viewmodel = { module = 'com.rickclephas.kmp:kmp-observableviewmodel-core', version.ref = 'observableviewmodel' }
# Compose libs
compose-bom = { module = 'androidx.compose:compose-bom', version.ref = 'compose-bom' }
compose-foundation = { module = 'androidx.compose.foundation:foundation' }
compose-material3 = { module = 'androidx.compose.material3:material3' }
compose-runtime = { module = 'androidx.compose.runtime:runtime' }
compose-ui = { module = 'androidx.compose.ui:ui' }
compose-ui-tooling = { module = 'androidx.compose.ui:ui-tooling' }
compose-ui-toolingPreview = { module = 'androidx.compose.ui:ui-tooling-preview' }
compose-image-loader = { module = 'io.github.qdsfdhvh:image-loader', version.ref = 'compose-image-loader' }

[plugins]
android-application = { id = 'com.android.application', version.ref = 'agp' }
android-library = { id = 'com.android.library', version.ref = 'agp' }
kotlin-android = { id = 'org.jetbrains.kotlin.android', version.ref = 'kotlin' }
kotlin-multiplatform = { id = 'org.jetbrains.kotlin.multiplatform', version.ref = 'kotlin' }
kotlin-native-cocoapods = { id = 'org.jetbrains.kotlin.native.cocoapods', version.ref = 'kotlin' }
ksp = { id = 'com.google.devtools.ksp', version.ref = 'ksp' }
kotlin-serialization = { id = 'org.jetbrains.kotlin.plugin.serialization', version.ref = 'kotlin' }
kotlin-parcelize = { id = 'org.jetbrains.kotlin.plugin.parcelize', version.ref = 'kotlin' }
ktorfit = { id = 'de.jensklingenberg.ktorfit', version.ref = 'ktorfit' }
buildkonfig = { id = 'com.codingfeline.buildkonfig', version.ref = 'buildkonfig' }
nativecoroutines = { id = 'com.rickclephas.kmp.nativecoroutines', version.ref = 'nativecoroutines' }
skie = { id = 'co.touchlab.skie', version.ref = 'skie' }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

