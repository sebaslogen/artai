// Code generated by Wire protocol buffer compiler, do not edit.
// Source: screen.v1.ButtonAction in screen.proto
package screen.v1

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.ReverseProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import com.squareup.wire.`internal`.JvmField
import com.squareup.wire.`internal`.sanitize
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import okio.ByteString

public class ButtonAction(
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "actionId",
    schemaIndex = 0,
  )
  public val action_id: String = "",
  @field:WireField(
    tag = 2,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "actionTitle",
    schemaIndex = 1,
  )
  public val action_title: String = "",
  @field:WireField(
    tag = 3,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "actionDescription",
    schemaIndex = 2,
  )
  public val action_description: String = "",
  @field:WireField(
    tag = 4,
    adapter = "com.squareup.wire.ProtoAdapter#BOOL",
    jsonName = "actionEnabled",
    schemaIndex = 3,
  )
  public val action_enabled: Boolean? = null,
  unknownFields: ByteString = ByteString.EMPTY,
) : Message<ButtonAction, Nothing>(ADAPTER, unknownFields) {
  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN,
  )
  override fun newBuilder(): Nothing = throw
      AssertionError("Builders are deprecated and only available in a javaInterop build; see https://square.github.io/wire/wire_compiler/#kotlin")

  override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is ButtonAction) return false
    if (unknownFields != other.unknownFields) return false
    if (action_id != other.action_id) return false
    if (action_title != other.action_title) return false
    if (action_description != other.action_description) return false
    if (action_enabled != other.action_enabled) return false
    return true
  }

  override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + action_id.hashCode()
      result = result * 37 + action_title.hashCode()
      result = result * 37 + action_description.hashCode()
      result = result * 37 + (action_enabled?.hashCode() ?: 0)
      super.hashCode = result
    }
    return result
  }

  override fun toString(): String {
    val result = mutableListOf<String>()
    result += """action_id=${sanitize(action_id)}"""
    result += """action_title=${sanitize(action_title)}"""
    result += """action_description=${sanitize(action_description)}"""
    if (action_enabled != null) result += """action_enabled=$action_enabled"""
    return result.joinToString(prefix = "ButtonAction{", separator = ", ", postfix = "}")
  }

  public fun copy(
    action_id: String = this.action_id,
    action_title: String = this.action_title,
    action_description: String = this.action_description,
    action_enabled: Boolean? = this.action_enabled,
    unknownFields: ByteString = this.unknownFields,
  ): ButtonAction = ButtonAction(action_id, action_title, action_description, action_enabled,
      unknownFields)

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<ButtonAction> = object : ProtoAdapter<ButtonAction>(
      FieldEncoding.LENGTH_DELIMITED, 
      ButtonAction::class, 
      "type.googleapis.com/screen.v1.ButtonAction", 
      PROTO_3, 
      null, 
      "screen.proto"
    ) {
      override fun encodedSize(`value`: ButtonAction): Int {
        var size = value.unknownFields.size
        if (value.action_id != "") size += ProtoAdapter.STRING.encodedSizeWithTag(1,
            value.action_id)
        if (value.action_title != "") size += ProtoAdapter.STRING.encodedSizeWithTag(2,
            value.action_title)
        if (value.action_description != "") size += ProtoAdapter.STRING.encodedSizeWithTag(3,
            value.action_description)
        size += ProtoAdapter.BOOL.encodedSizeWithTag(4, value.action_enabled)
        return size
      }

      override fun encode(writer: ProtoWriter, `value`: ButtonAction) {
        if (value.action_id != "") ProtoAdapter.STRING.encodeWithTag(writer, 1, value.action_id)
        if (value.action_title != "") ProtoAdapter.STRING.encodeWithTag(writer, 2,
            value.action_title)
        if (value.action_description != "") ProtoAdapter.STRING.encodeWithTag(writer, 3,
            value.action_description)
        ProtoAdapter.BOOL.encodeWithTag(writer, 4, value.action_enabled)
        writer.writeBytes(value.unknownFields)
      }

      override fun encode(writer: ReverseProtoWriter, `value`: ButtonAction) {
        writer.writeBytes(value.unknownFields)
        ProtoAdapter.BOOL.encodeWithTag(writer, 4, value.action_enabled)
        if (value.action_description != "") ProtoAdapter.STRING.encodeWithTag(writer, 3,
            value.action_description)
        if (value.action_title != "") ProtoAdapter.STRING.encodeWithTag(writer, 2,
            value.action_title)
        if (value.action_id != "") ProtoAdapter.STRING.encodeWithTag(writer, 1, value.action_id)
      }

      override fun decode(reader: ProtoReader): ButtonAction {
        var action_id: String = ""
        var action_title: String = ""
        var action_description: String = ""
        var action_enabled: Boolean? = null
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> action_id = ProtoAdapter.STRING.decode(reader)
            2 -> action_title = ProtoAdapter.STRING.decode(reader)
            3 -> action_description = ProtoAdapter.STRING.decode(reader)
            4 -> action_enabled = ProtoAdapter.BOOL.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return ButtonAction(
          action_id = action_id,
          action_title = action_title,
          action_description = action_description,
          action_enabled = action_enabled,
          unknownFields = unknownFields
        )
      }

      override fun redact(`value`: ButtonAction): ButtonAction = value.copy(
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L
  }
}
